---

import Slide from "../elements/slide.astro";
const {projects} = Astro.props;
---

<div
  class="flex flex-col justify-center items-center"
  x-data="{activeSlide: 0}"
>
<p x-text="activeSlide"></p>
  <div class="mx-auto relative p-10 w-[80vw] h-[64vh] flex items-center bg-pink-500 rounded-lg">
    <!-- Slides -->
    {
      projects.map((project: any, index: number) => (
        <div
          x-show=`activeSlide == ${index}`
          class="flex-1"
        >

          
         <Slide project={project}/>
        </div>
      ))
    }

    <!-- Prev/Next Arrows -->
    <div class="absolute inset-0 flex">
      <div class="flex items-center justify-start w-1/2">
        <button
        
          class="bg-pink-100 text-pink-500 hover:text-orange-500 font-bold hover:shadow-lg rounded-full w-12 h-12 -ml-6"
          x-on:click=`activeSlide = activeSlide === 0 ? ${projects.length-1} : activeSlide - 1`
        >
          &#8592;
        </button>
      </div>
      <div class="flex items-center justify-end w-1/2">
        <button
        
          class="bg-pink-100 text-pink-500 hover:text-orange-500 font-bold hover:shadow rounded-full w-12 h-12 -mr-6"
          x-on:click=`activeSlide = activeSlide === ${projects.length-1} ? 0 : activeSlide + 1`
        >
          &#8594;
        </button>
      </div>
    </div>

    <!-- Buttons -->
    <div class="absolute w-full flex items-center justify-center px-4">
      <template x-for="slide in slides" :key="slide">
        <button
          class="flex-1 w-4 h-2 mt-4 mx-2 mb-0 rounded-full overflow-hidden transition-colors duration-200 ease-out hover:bg-pink-600 hover:shadow-lg"
          :class=`{ 
                'bg-orange-600': activeSlide === slide,
                'bg-pink-300': activeSlide !== slide 
            }`
          x-on:click="activeSlide = slide"></button>
      </template>
    </div>
  </div>
</div>
